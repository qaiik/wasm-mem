let _is=WebAssembly.instantiateStreaming.bind(window),_i=WebAssembly.instantiate.bind(window);WebAssembly.instantiateStreaming=function(e,t){let i=new WebAssembly.Memory({initial:256});return window.dispatchEvent(new CustomEvent("wasmmem",{detail:{memory:i}})),t.js?t.js={mem:i}:t.js.mem=i,_is(e,t)},WebAssembly.instantiate=function(e,t){let i=new WebAssembly.Memory({initial:256});return window.dispatchEvent(new CustomEvent("wasmmem",{detail:{memory:i}})),t.js?t.js={mem:i}:t.js.mem=i,_i(e,t)},ByteTypes={i8:Uint8Array,i16:Uint16Array,i32:Uint32Array,i64:BigUint64Array,f32:Float32Array,f64:Float64Array,str:Uint8Array},ByteMult={i8:1,i16:2,i32:4,i64:8,f32:4,f64:8,str:1};class MemoryReader{constructor(e){this.mem=e}read(e,t="i32",i=!1){if("str"!==t)return new ByteTypes[t](this.mem.buffer,e)[0];if(!i){let n=new ByteTypes[t](this.mem.buffer,e),r=0;for(;0!==n[r];)r++;return new TextDecoder("utf-8").decode(n.slice(0,r))}let m=new ByteTypes[t](this.mem.buffer,e);return new TextDecoder("utf-8").decode(m.slice(0,i))}searchEQ(e,t,i=0,n=this.mem.buffer.byteLength){let r=[];for(let m=i;m<n;m+=ByteMult[e])this.read(m,e)==t&&r.push([m,t]);return r}}class MemoryWriter{constructor(e){this.mem=e}Write(e,t,i="i32",n=!1){"str"!==i&&(new ByteTypes[i](this.mem.buffer,e)[0]=t);let r=new ByteTypes[i](this.mem.buffer,e);for(let m=0;m<t.length;m++)r[m]=new TextEncoder("utf-8").encode(t[m]);if(n)for(let s=0;s<n-t.length;s++)r[t.length+s]="\0"}}
